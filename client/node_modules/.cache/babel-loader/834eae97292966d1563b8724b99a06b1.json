{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Desktop/smartbrain/smart-brain/src/App.js\";\nimport React, { Component } from \"react\";\nimport Particles from 'react-particles-js';\nimport \"./App.css\";\nimport Clarifai from 'clarifai';\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nconst app = new Clarifai.App({\n  apiKey: 'fd2a805864b54d84baae0f7a3e6cd060'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 250\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.claculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height); //console.log(width, height);\n      //We return the object Bounding Box with our calculations based on the face\n\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      //console.log(event.target.value);\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      //console.log('click');\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input) // do something with response\n      //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      .then(response => this.displayFaceBox(this.claculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/isaac/Desktop/smartbrain/smart-brain/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","Navigation","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","claculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","setState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Particles from 'react-particles-js';\nimport \"./App.css\";\nimport Clarifai from 'clarifai';\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\n\n\nconst app = new Clarifai.App({\n  apiKey: 'fd2a805864b54d84baae0f7a3e6cd060'\n});\n\nconst particlesOptions = {\n\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 250\n      }\n    }\n  }\n}\n\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n\n      input: '',\n      imageUrl: '',\n      box: ''\n\n    }\n  }\n\n  claculateFaceLocation = (data) => {\n\n    const clarifaiFace =  data.outputs[0].data.regions[0].region_info.bounding_box;\n\n    const image = document.getElementById('inputimage');\n\n    const width = Number(image.width);\n\n    const height = Number(image.height);\n\n    //console.log(width, height);\n   \n    //We return the object Bounding Box with our calculations based on the face\n    return {\n\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n\n    }\n\n  }\n\n  displayFaceBox = (box) => {\n\n    console.log(box);\n\n    this.setState({box: box});\n  }\n\n\n\n\n  onInputChange = (event) => {\n\n    //console.log(event.target.value);\n\n    this.setState({ input: event.target.value });\n\n  }\n\n  onButtonSubmit = () => {\n\n    //console.log('click');\n\n    this.setState({ imageUrl: this.state.input });\n\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n\n      // do something with response\n      //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n\n      .then(response => this.displayFaceBox(this.claculateFaceLocation(response)))\n      .catch(err => console.log(err));\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Particles\n          className=\"particles\"\n          params={particlesOptions}\n\n        />\n        <Navigation />\n\n        <Logo />\n\n        <Rank />\n\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n\n        <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}